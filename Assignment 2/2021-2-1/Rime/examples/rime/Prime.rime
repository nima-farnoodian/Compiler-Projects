func int isPrime(int: number) {
	if (number <= 1) {
		return x
	}
	
	var bool: prime = TRUE
	var int: i = 2
	
	while (i < number && prime) {
		if (number % i == 0) {
			prime = FALSE
		}
		
		i += 1
	}
	
	return prime
}

proc printPrimes(int: maxN) {
	var int: current = 2
	var int: count = 0
	
	while (count < n) {
		if (ifPrime(current)) {
			print(current)
			count += 1
		}
		
		current += 1
	}
}

proc main([string]: args) {
	val int: maxN = parseInt(args[0])
	printPrimes(n)
}
